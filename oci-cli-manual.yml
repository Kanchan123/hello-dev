version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash

env:
  vaultVariables:
    configFile : ocid1.vaultsecret.oc1.iad.amaaaaaa34lgq7aa7w6s56k2ehdyri7xs5wqnyvoasfx27dbr5wb3tt74abq
    ociCliApiPrivateKey : ocid1.vaultsecret.oc1.iad.amaaaaaa34lgq7aa4kcfbbs2ihdmaedldtyzo4oqichf6bwu7lqylkwb3kpq

steps:
  - type: Command
    name: "Setup oci cli with api key"
    timeoutInSeconds: 400
    command: |
      echo "Setup oci-cli directory to store oci private api key and config file."
      mkdir -p /workspace/oci-cli

      echo "Download oci private api key to the oci-cli directory."
      echo $ociCliApiPrivateKey | base64 --decode > /workspace/oci-cli/oci_api_key.pem

      echo "Download oci config file to the oci-cli directory."
      echo $configFile | base64 --decode > /workspace/oci-cli/config

      echo "Configure oci cli to use api_key that was downloaded."
      export OCI_CLI_AUTH=api_key
      export OCI_CLI_CONFIG_FILE=/workspace/oci-cli/config

      echo "Testing the setup"
      oci os ns get
      echo "lets see!!"
      echo "hello" > test1.txt
      cat test1.txt
      oci artifacts generic artifact download --artifact-id ocid1.genericartifact.oc1.iad.0.amaaaaaa34lgq7aakerwvqyv3vifcjk4uw7f4vlt7mdff4ugdhjjhobiruja --file field-webinar-zip
      echo `ls -Flah`
      cat field-webinar-zip
